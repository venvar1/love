#include<stdio.h> 
void Need(int need[5][4], int max[5][4], 
                int allot[5][4]) 
{ 
    for (int i = 0 ; i < 5 ; i++) 
        for (int j = 0 ; j < 4 ; j++) 
            need[i][j] = max[i][j] - allot[i][j]; 
} 
void isSafe(int processes[5],int avail[4],int max[5][4],int allot[5][4]) 
{ 
    int need[5][4]; 
    Need(need, max, allot);
    int finish[5] = {0,0,0,0,0}; 
    int safeSeq[5]; 
    int work[4]; 
    for (int i = 0; i < 4 ; i++) 
        work[i] = avail[i]; 
    int count = 0; 
    while (count < 5) 
    { 
        
        int found = 0; 
        for (int p = 0; p < 5; p++) 
        { 
            if (finish[p] == 0) 
            { 
                int j; 
                for (j = 0; j < 4; j++) 
                    if (need[p][j] > work[j]) 
                        break; 
                if (j == 4) 
                { 
                    for (int k = 0 ; k < 4 ; k++) 
                        work[k] += allot[p][k]; 
                    safeSeq[count++] = p; 
                    finish[p] = 1; 
                    found = 1; 
                } 
            } 
        } 
        if (found == 0) 
        { 
            printf("System is not in safe state\n");
            return; 
        } 
    } 
    printf("System is in safe state\n");    
    return; 
} 
 
void main() 
{ 
    int processes[5] = {0,1,2,3,4}; 
    int avail[4] = {1,5,2,0}; 
    int max[5][4] = {{0,0,1,2},{1,7,5,0},{2,3,5,6},{0,6,5,2},{0,6,5,6}}; 
    int allot[5][4] = {{0,0,1,2},{1,0,0,0},{1,3,5,4},{0,6,3,2},{0,0,1,2}};
    isSafe(processes,avail,max,allot); 
    return;
} 
